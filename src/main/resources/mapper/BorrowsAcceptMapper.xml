<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="invt.dao.local.BorrowsAcceptDao" >
  <resultMap id="BaseResultMap" type="invt.model.po.BorrowsAccept" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="bo_id" property="boId" jdbcType="BIGINT" />
    <result column="is_vip" property="isVip" jdbcType="BIT" />
    <result column="va_id" property="vaId" jdbcType="BIGINT" />
    <result column="original_principal" property="originalPrincipal" jdbcType="DECIMAL" />
    <result column="price_principal" property="pricePrincipal" jdbcType="DECIMAL" />
    <result column="price_interest" property="priceInterest" jdbcType="DECIMAL" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="price_punish" property="pricePunish" jdbcType="DECIMAL" />
    <result column="plan_time" property="planTime" jdbcType="DATE" />
    <result column="success_time" property="successTime" jdbcType="TIMESTAMP" />
    <result column="is_pay" property="isPay" jdbcType="INTEGER" />
    <result column="owner_rate" property="ownerRate" jdbcType="DECIMAL" />
    <result column="is_lender" property="isLender" jdbcType="BIT" />
    <result column="expect_num" property="expectNum" jdbcType="INTEGER" />
    <result column="ba_transfer" property="baTransfer" jdbcType="DECIMAL" />
    <result column="ba_is_transfer" property="baIsTransfer" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, bo_id, is_vip, va_id, original_principal, price_principal, price_interest, 
    price, price_punish, plan_time, success_time, is_pay, owner_rate, is_lender, expect_num, 
    ba_transfer, ba_is_transfer, version, create_time, update_time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from borrows_accept
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from borrows_accept
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="invt.model.po.BorrowsAccept" >
    insert into borrows_accept (id, user_id, bo_id, 
      is_vip, va_id, original_principal, 
      price_principal, price_interest, price, 
      price_punish, plan_time, success_time, 
      is_pay, owner_rate, is_lender, 
      expect_num, ba_transfer, ba_is_transfer, 
      version, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{boId,jdbcType=BIGINT}, 
      #{isVip,jdbcType=BIT}, #{vaId,jdbcType=BIGINT}, #{originalPrincipal,jdbcType=DECIMAL}, 
      #{pricePrincipal,jdbcType=DECIMAL}, #{priceInterest,jdbcType=DECIMAL}, #{price,jdbcType=DECIMAL}, 
      #{pricePunish,jdbcType=DECIMAL}, #{planTime,jdbcType=DATE}, #{successTime,jdbcType=TIMESTAMP}, 
      #{isPay,jdbcType=BIT}, #{ownerRate,jdbcType=DECIMAL}, #{isLender,jdbcType=BIT}, 
      #{expectNum,jdbcType=INTEGER}, #{baTransfer,jdbcType=DECIMAL}, #{baIsTransfer,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="invt.model.po.BorrowsAccept" >
    insert into borrows_accept
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="boId != null" >
        bo_id,
      </if>
      <if test="isVip != null" >
        is_vip,
      </if>
      <if test="vaId != null" >
        va_id,
      </if>
      <if test="originalPrincipal != null" >
        original_principal,
      </if>
      <if test="pricePrincipal != null" >
        price_principal,
      </if>
      <if test="priceInterest != null" >
        price_interest,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="pricePunish != null" >
        price_punish,
      </if>
      <if test="planTime != null" >
        plan_time,
      </if>
      <if test="successTime != null" >
        success_time,
      </if>
      <if test="isPay != null" >
        is_pay,
      </if>
      <if test="ownerRate != null" >
        owner_rate,
      </if>
      <if test="isLender != null" >
        is_lender,
      </if>
      <if test="expectNum != null" >
        expect_num,
      </if>
      <if test="baTransfer != null" >
        ba_transfer,
      </if>
      <if test="baIsTransfer != null" >
        ba_is_transfer,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="boId != null" >
        #{boId,jdbcType=BIGINT},
      </if>
      <if test="isVip != null" >
        #{isVip,jdbcType=BIT},
      </if>
      <if test="vaId != null" >
        #{vaId,jdbcType=BIGINT},
      </if>
      <if test="originalPrincipal != null" >
        #{originalPrincipal,jdbcType=DECIMAL},
      </if>
      <if test="pricePrincipal != null" >
        #{pricePrincipal,jdbcType=DECIMAL},
      </if>
      <if test="priceInterest != null" >
        #{priceInterest,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="pricePunish != null" >
        #{pricePunish,jdbcType=DECIMAL},
      </if>
      <if test="planTime != null" >
        #{planTime,jdbcType=DATE},
      </if>
      <if test="successTime != null" >
        #{successTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPay != null" >
        #{isPay,jdbcType=BIT},
      </if>
      <if test="ownerRate != null" >
        #{ownerRate,jdbcType=DECIMAL},
      </if>
      <if test="isLender != null" >
        #{isLender,jdbcType=BIT},
      </if>
      <if test="expectNum != null" >
        #{expectNum,jdbcType=INTEGER},
      </if>
      <if test="baTransfer != null" >
        #{baTransfer,jdbcType=DECIMAL},
      </if>
      <if test="baIsTransfer != null" >
        #{baIsTransfer,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="invt.model.po.BorrowsAccept" >
    update borrows_accept
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="boId != null" >
        bo_id = #{boId,jdbcType=BIGINT},
      </if>
      <if test="isVip != null" >
        is_vip = #{isVip,jdbcType=BIT},
      </if>
      <if test="vaId != null" >
        va_id = #{vaId,jdbcType=BIGINT},
      </if>
      <if test="originalPrincipal != null" >
        original_principal = #{originalPrincipal,jdbcType=DECIMAL},
      </if>
      <if test="pricePrincipal != null" >
        price_principal = #{pricePrincipal,jdbcType=DECIMAL},
      </if>
      <if test="priceInterest != null" >
        price_interest = #{priceInterest,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="pricePunish != null" >
        price_punish = #{pricePunish,jdbcType=DECIMAL},
      </if>
      <if test="planTime != null" >
        plan_time = #{planTime,jdbcType=DATE},
      </if>
      <if test="successTime != null" >
        success_time = #{successTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPay != null" >
        is_pay = #{isPay,jdbcType=BIT},
      </if>
      <if test="ownerRate != null" >
        owner_rate = #{ownerRate,jdbcType=DECIMAL},
      </if>
      <if test="isLender != null" >
        is_lender = #{isLender,jdbcType=BIT},
      </if>
      <if test="expectNum != null" >
        expect_num = #{expectNum,jdbcType=INTEGER},
      </if>
      <if test="baTransfer != null" >
        ba_transfer = #{baTransfer,jdbcType=DECIMAL},
      </if>
      <if test="baIsTransfer != null" >
        ba_is_transfer = #{baIsTransfer,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="invt.model.po.BorrowsAccept" >
    update borrows_accept
    set user_id = #{userId,jdbcType=BIGINT},
      bo_id = #{boId,jdbcType=BIGINT},
      is_vip = #{isVip,jdbcType=BIT},
      va_id = #{vaId,jdbcType=BIGINT},
      original_principal = #{originalPrincipal,jdbcType=DECIMAL},
      price_principal = #{pricePrincipal,jdbcType=DECIMAL},
      price_interest = #{priceInterest,jdbcType=DECIMAL},
      price = #{price,jdbcType=DECIMAL},
      price_punish = #{pricePunish,jdbcType=DECIMAL},
      plan_time = #{planTime,jdbcType=DATE},
      success_time = #{successTime,jdbcType=TIMESTAMP},
      is_pay = #{isPay,jdbcType=BIT},
      owner_rate = #{ownerRate,jdbcType=DECIMAL},
      is_lender = #{isLender,jdbcType=BIT},
      expect_num = #{expectNum,jdbcType=INTEGER},
      ba_transfer = #{baTransfer,jdbcType=DECIMAL},
      ba_is_transfer = #{baIsTransfer,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="paySuccessById" >
    update borrows_accept set is_pay=1,success_time=now(),update_time=now()
    where id=#{id,jdbcType=BIGINT} and version=#{version,jdbcType=INTEGER} and is_pay=0
  </update>

  <select id="sumPincipalByBoId" resultType="java.math.BigDecimal">
    select sum(price_principal)  from borrows_accept where bo_id=#{boId,jdbcType=DECIMAL}
    <if test="isPay==false">
      is_pay=0
    </if>
    <if test="isPay==true">
      is_pay=1
    </if>
  </select>

  <select id="querySumPriceBenByUserVaId" resultMap="BaseResultMap">
    select bo_id,price_principal from borrows_accept
    where va_id=#{vaId,jdbcType=BIGINT}
    and user_id=#{userId,jdbcType=BIGINT}
    and is_pay=0
    and price>0
  </select>

  <select id="queryPriceBenByVaId" resultMap="BaseResultMap">
    select bo_id,price_principal from borrows_accept
    where va_id=#{vaId,jdbcType=BIGINT}
    and is_pay=0
    and price>0
  </select>

  <select id="getBaListByBoIdPlanTime" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from borrows_accept
    where bo_id=#{boId,jdbcType=BIGINT}
    and   plan_time = #{planTime,jdbcType=DATE}
    and is_pay=#{isPay,jdbcType=INTEGER}
  </select>

  <select id="sumBenxiByBoid" resultType="invt.model.BaBenxiStat">
    SELECT SUM(price_principal) as sumBen
        ,SUM(price)-SUM(price_principal) as sumXi
        ,sum(price) as sumPrice
	FROM borrows_accept WHERE bo_id=#{boId,jdbcType=BIGINT} AND is_pay=0
  </select>

  <select id="sumBenxiByVaid" resultType="invt.model.BaBenxiStat">
    SELECT SUM(price_principal) as sumBen
      ,SUM(price)-SUM(price_principal) as sumXi
      ,sum(price) as sumPrice
    FROM borrows_accept
    WHERE bo_id=#{boId,jdbcType=BIGINT}
        AND user_id=#{userId,jdbcType=BIGINT}
        AND va_id=#{vaId,jdbcType=BIGINT}
        AND is_pay=0
  </select>

  <select id="getPaidPriceByBoIdVaId" resultType="invt.model.BaBenxiStat">
    select
        SUM(price) sumPrice
    from
        borrows_accept
    WHERE
        bo_id=#{boId,jdbcType=BIGINT}
        and user_id=#{userId,jdbcType=BIGINT}
        and va_id=#{vaId,jdbcType=BIGINT}
        and is_pay=1;
  </select>

  <select id="getUnpayedSumPrice" resultType="invt.model.dto.BaUnpayedSumDTO">
    select
    SUM(price) sumPrice,
    SUM(price_principal) sumPricePrincipal,
    SUM(price_interest) sumPriceInterest
    from
    borrows_accept
    WHERE
    bo_id=#{boId,jdbcType=BIGINT}
    and user_id=#{userId,jdbcType=BIGINT}
    and va_id=#{vaId,jdbcType=BIGINT}
    and is_pay=0;
  </select>

  <select id="getUnpayCntByBoIdVaId" resultType="java.lang.Integer">
    select count(1) from borrows_accept where bo_id=#{boId} and va_id=#{vaId} and is_pay=0
  </select>

  <select id="countNotRepayByBoIdVaid" resultType="java.lang.Integer">
    select
    count(0)
    from
    borrows_accept
    WHERE
    bo_id=#{boId,jdbcType=BIGINT}
    and user_id=#{userId,jdbcType=BIGINT}
    and va_id=#{vaId,jdbcType=BIGINT}
    and is_pay=0;
  </select>

  <select id="notRepayBYBoidVaid" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    borrows_accept
    WHERE
    bo_id=#{boId,jdbcType=BIGINT}
    and user_id=#{userId,jdbcType=BIGINT}
    and va_id=#{vaId,jdbcType=BIGINT}
    and is_pay=0;
  </select>

  <select id="getRecordByPlanTime" resultType="invt.model.po.BorrowsAccept">
    select
    <include refid="Base_Column_List" />
    from
    borrows_accept
    WHERE
    bo_id=#{boId,jdbcType=BIGINT}
    and user_id=#{userId,jdbcType=BIGINT}
    and va_id=#{vaId,jdbcType=BIGINT}
    and plan_time=#{planTime,jdbcType=DATE};
  </select>

  <update id="updateDataWhenDebtBuy" parameterType="invt.model.po.BorrowsAccept">
    update borrows_accept
    set price=#{price,jdbcType=DECIMAL},
    price_principal=#{price_principal,jdbcType=DECIMAL},
    price_interest=#{price_interest,jdbcType=DECIMAL},
    price_punish=#{price_punish,jdbcType=DECIMAL},
    version=version+1
    where id=#{id,jdbcType=BIGINT} and verion=#{version,jdbcType=INTEGER}
  </update>

  <select id="getBaSumPriceListByVaId" resultMap="BaseResultMap">
    select bo_id,user_id,sum(price_principal)price_principal
    from borrows_accept
    where va_id=#{vaId}
    and is_pay=0
    and price_principal>0
    group by bo_id
  </select>
</mapper>