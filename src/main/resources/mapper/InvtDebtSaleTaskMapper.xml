<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="invt.dao.local.InvtDebtSaleTaskDao">
  <resultMap id="BaseResultMap" type="invt.model.po.InvtDebtSaleTask">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="bo_id" jdbcType="BIGINT" property="boId" />
    <result column="ds_id" jdbcType="BIGINT" property="dsId" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="from_id" jdbcType="BIGINT" property="fromId" />
    <result column="from_type" jdbcType="INTEGER" property="fromType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, bo_id, ds_id, product_id, from_id, from_type, `status`, version, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from invt_debt_sale_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from invt_debt_sale_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="invt.model.po.InvtDebtSaleTask">
    insert into invt_debt_sale_task (id, user_id, bo_id,
      ds_id, product_id, from_id,
      from_type, `status`, version,
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{boId,jdbcType=BIGINT},
      #{dsId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{fromId,jdbcType=BIGINT},
      #{fromType,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{version,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="invt.model.po.InvtDebtSaleTask">
    insert into invt_debt_sale_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="boId != null">
        bo_id,
      </if>
      <if test="dsId != null">
        ds_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="fromId != null">
        from_id,
      </if>
      <if test="fromType != null">
        from_type,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="boId != null">
        #{boId,jdbcType=BIGINT},
      </if>
      <if test="dsId != null">
        #{dsId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="fromId != null">
        #{fromId,jdbcType=BIGINT},
      </if>
      <if test="fromType != null">
        #{fromType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="invt.model.po.InvtDebtSaleTask">
    update invt_debt_sale_task
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="boId != null">
        bo_id = #{boId,jdbcType=BIGINT},
      </if>
      <if test="dsId != null">
        ds_id = #{dsId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="fromId != null">
        from_id = #{fromId,jdbcType=BIGINT},
      </if>
      <if test="fromType != null">
        from_type = #{fromType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="invt.model.po.InvtDebtSaleTask">
    update invt_debt_sale_task
    set user_id = #{userId,jdbcType=BIGINT},
      bo_id = #{boId,jdbcType=BIGINT},
      ds_id = #{dsId,jdbcType=BIGINT},
      product_id = #{productId,jdbcType=BIGINT},
      from_id = #{fromId,jdbcType=BIGINT},
      from_type = #{fromType,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectAvaTasks" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from invt_debt_sale_task
    where
    status in(0,99) order by id asc
  </select>

  <update id="updateTaskStatus" parameterType="java.util.HashMap">
    update invt_debt_sale_task
    set
    status = #{targetStatus,jdbcType=INTEGER},
    version = version+1,
    product_id = #{productId,jdbcType=BIGINT},
    update_time = now()
    where
    status = #{status,jdbcType=INTEGER}
    <if test="id != null" >
      and id = #{id,jdbcType=BIGINT}
    </if>
    <if test="dsId != null" >
      and ds_id = #{dsId,jdbcType=BIGINT}
    </if>
    <if test="version != null" >
      and version = #{version,jdbcType=INTEGER}
    </if>
  </update>

  <update id="updateTaskWithDsInfo" parameterType="java.util.HashMap">
    update invt_debt_sale_task
    set
    ds_id = #{dsId,jdbcType=BIGINT},
    status = #{targetStatus,jdbcType=INTEGER},
    version = version+1,
    update_time = now()
    where id = #{id,jdbcType=BIGINT}
    and status = #{status,jdbcType=INTEGER}
    and version = #{version,jdbcType=INTEGER}
  </update>

  <select id="queryByUserIdBoId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from invt_debt_sale_task
    where bo_id=#{boId}
     and user_id=#{userId}
    and from_id=#{fromId}
    and from_type=#{fromType}
    order by id desc
  </select>

  <select id="cntTakByVaInfo" resultType="java.lang.Integer">
    select count(1) from invt_debt_sale_task
    where bo_id=#{boId}
    and user_id=#{userId}
    and from_id=#{fromId}
  </select>

  <select id="queryByConditions" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from invt_debt_sale_task
    where 1=1
    <if test="id != null" >
      and id = #{id,jdbcType=BIGINT}
    </if>
    <if test="dsId != null" >
      and ds_id = #{dsId,jdbcType=BIGINT}
    </if>
    <if test="status != null" >
      and status = #{status,jdbcType=INTEGER}
    </if>
  </select>
</mapper>