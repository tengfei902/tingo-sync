<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="invt.dao.local.DebtSaleDao">
	<resultMap id="BaseResultMap" type="invt.model.po.DebtSale">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="user_id" property="userId" jdbcType="BIGINT"/>
		<result column="bo_id" property="boId" jdbcType="BIGINT"/>
		<result column="va_id" property="vaId" jdbcType="BIGINT"/>
		<result column="transfer_num" property="transferNum" jdbcType="DECIMAL"/>
		<result column="price" property="price" jdbcType="DECIMAL"/>
		<result column="one_price" property="onePrice" jdbcType="DECIMAL"/>
		<result column="op_type" property="opType" jdbcType="BIT"/>
		<result column="title" property="title" jdbcType="VARCHAR"/>
		<result column="transfer_rate" property="transferRate" jdbcType="DECIMAL"/>
		<result column="percent" property="percent" jdbcType="DECIMAL"/>
		<result column="expect" property="expect" jdbcType="TINYINT"/>
		<result column="residue_num" property="residueNum" jdbcType="DECIMAL"/>
		<result column="deadline" property="deadline" jdbcType="TIMESTAMP"/>
		<result column="status" property="status" jdbcType="INTEGER"/>
		<result column="version" property="version" jdbcType="INTEGER"/>
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
		<result column="db_id" property="dbId" jdbcType="BIGINT"/>
		<result column="transfer_type" property="transferType" jdbcType="BIT"/>
		<result column="lock_num" property="lockNum" jdbcType="DECIMAL"/>
		<result column="one_interest" property="oneInterest" jdbcType="DECIMAL"/>
	</resultMap>
	<sql id="Base_Column_List">
    id, user_id, bo_id, va_id, transfer_num, price, one_price, op_type, title, transfer_rate, 
    percent, expect, residue_num, deadline, status, version, create_time, update_time, 
    db_id, transfer_type,lock_num,one_interest
  </sql>

	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List"/>
		from debt_sale
		where id = #{id,jdbcType=BIGINT}
	</select>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="invt.model.po.DebtSale">
    insert into debt_sale (id, user_id, bo_id, 
      va_id, transfer_num, price, 
      one_price, op_type, title, 
      transfer_rate, percent, expect, 
      residue_num, deadline, status, 
      version, create_time, update_time, 
      db_id, transfer_type,one_interest)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{boId,jdbcType=BIGINT}, 
      #{vaId,jdbcType=BIGINT}, #{transferNum,jdbcType=DECIMAL}, #{price,jdbcType=DECIMAL}, 
      #{onePrice,jdbcType=DECIMAL}, #{opType,jdbcType=BIT}, #{title,jdbcType=VARCHAR}, 
      #{transferRate,jdbcType=DECIMAL}, #{percent,jdbcType=DECIMAL}, #{expect,jdbcType=TINYINT}, 
      #{residueNum,jdbcType=DECIMAL}, #{deadline,jdbcType=TIMESTAMP}, #{status,jdbcType=BIT}, 
      #{version,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{dbId,jdbcType=BIGINT}, #{transferType,jdbcType=BIT}, #{oneInterest,jdbcType=DECIMAL})
  </insert>

	<update id="updateById" parameterType="invt.model.po.DebtSale">
    update debt_sale
    set user_id = #{userId,jdbcType=BIGINT},
      bo_id = #{boId,jdbcType=BIGINT},
      va_id = #{vaId,jdbcType=BIGINT},
      transfer_num = #{transferNum,jdbcType=DECIMAL},
      price = #{price,jdbcType=DECIMAL},
      one_price = #{onePrice,jdbcType=DECIMAL},
      op_type = #{opType,jdbcType=BIT},
      title = #{title,jdbcType=VARCHAR},
      transfer_rate = #{transferRate,jdbcType=DECIMAL},
      percent = #{percent,jdbcType=DECIMAL},
      expect = #{expect,jdbcType=TINYINT},
      residue_num = #{residueNum,jdbcType=DECIMAL},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT},
      version = version+1,
      update_time = now(),
      db_id = #{dbId,jdbcType=BIGINT},
      transfer_type = #{transferType,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>

	<select id="getDsListByUser" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from debt_sale
		where bo_id = #{boId,jdbcType=BIGINT}
		AND user_id=#{userId,jdbcType=BIGINT}
		AND va_id=#{vaId,jdbcType=BIGINT}
		AND status=#{status,jdbcType=INTEGER}
	</select>

	<update id="updateOnePriceById">
		update debt_sale
			set one_price=#{onePrice,jdbcType=BIGINT},
			price=#{price,jdbcType=BIGINT},
			expect=#{expect,jdbcType=INTEGER},
			status=#{status,jdbcType=INTEGER},
			version=version+1,
			update_time=now()
		where id=#{id,jdbcType=BIGINT}
	</update>

	<select id="getIdByBoIdVaId" resultType="java.lang.Long">
		select id from debt_sale
		WHERE bo_id = #{boId,jdbcType=BIGINT}
		AND user_id=#{userId,jdbcType=BIGINT}
		AND va_id=#{vaId,jdbcType=BIGINT}
		AND status=#{status,jdbcType=INTEGER}
		limit 1
	</select>

	<select id="getRecentDebtSaleList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from debt_sale
		order by id desc limit 10
	</select>

	<select id="getByIdAndNeStatus" resultType="long">
		<![CDATA[
		select
			<include refid="Base_Column_List"/>
		from debt_sale
		where id=#{id,jdbcType=BIGINT}
		and status<>#{status,jdbcType=INTEGER}
		]]>
	</select>

	<update id="updateResidueNumById">
		update debt_sale set residue_num=residue_num-${buyNum, jdbcType=DECIMAL}, version=version+1
		where id=${id, jdbcType=BIGINT} and version=${version, jdbcType=INTEGER} and residue_num>0
	</update>

	<select id="getDebtSaleListByVaIdBoIds" resultMap="BaseResultMap">
		select
			<include refid="Base_Column_List"/>
		from debt_sale
		where
		 va_id=#{vaId}
		and bo_id in
		<foreach collection="boIds" item="boId" index="index" open="(" close=")" separator=",">
			#{boId}
		</foreach>
	</select>

	<select id="getDebtSaleListForTrading" resultType="invt.model.dto.DebtSaleTaskDTO">
		select
		t2.id as "dsId",
		t1.id as "taskId",
		t2.user_id as "userId",
		t2.bo_id as "boId",
		t2.va_id as "vaId",
		t1.product_id as "productId",
		t2.transfer_num as "transferNum",
		t2.price as "price",
		t2.one_price as "onePrice",
		t2.transfer_rate as "transferRate",
		t2.percent as "percent",
		t2.expect as "expect",
		t2.residue_num as "residueNum",
		t2.transfer_type as "transferType",
		t1.status as "taskStatus",
		t2.status as "dsStatus",
		t2.lock_num as "lockNum",
		t2.one_interest as "oneInterest",
		t2.version as "version"
		from invt_debt_sale_task t1 left join debt_sale t2
		on t1.ds_id = t2.id
		where t1.status in (3,99) and t2.status=3 and t2.residue_num-t2.lock_num>0
	</select>

	<update id="lockDebtSaleNum">
		<![CDATA[
		update debt_sale
		set
		lock_num = lock_num+#{lockNum,jdbcType=DECIMAL},
		version=version+1,
		update_time=now()
		where id=#{dsId,jdbcType=BIGINT} and version = #{version,jdbcType=INTEGER} and lock_num+#{lockNum,jdbcType=DECIMAL}<=residue_num
		]]>
	</update>

	<update id="unfreezeLockedNum">
		<![CDATA[
		update debt_sale
		set
		lock_num = lock_num-#{buyNum,jdbcType=DECIMAL},
		version=version+1,
		update_time=now()
		where id=#{dsId,jdbcType=BIGINT} and version = #{version,jdbcType=INTEGER} and lock_num >= #{buyNum,jdbcType=DECIMAL}
		]]>
	</update>

	<insert id="saveDebtSale" useGeneratedKeys="true" keyProperty="id" parameterType="invt.model.po.DebtSale">
		insert into debt_sale
		(id,bo_id,op_type,title,expect,transfer_num,price,one_price,transfer_rate,
		residue_num,user_id,va_id,deadline,status,transfer_type,one_interest)
		values (
			#{id,jdbcType=BIGINT},
			#{boId,jdbcType=BIGINT},
			#{opType,jdbcType=BIT},
			#{title,jdbcType=VARCHAR},
			#{expect,jdbcType=TINYINT},
			#{transferNum,jdbcType=DECIMAL},
			#{price,jdbcType=DECIMAL},
			#{onePrice,jdbcType=DECIMAL},
			#{transferRate,jdbcType=DECIMAL},
			#{residueNum,jdbcType=DECIMAL},
			#{userId,jdbcType=BIGINT},
			#{vaId,jdbcType=BIGINT},
			#{deadline,jdbcType=TIMESTAMP},
			#{status,jdbcType=BIT},
			#{transferType,jdbcType=BIT},
			#{oneInterest,jdbcType=DECIMAL}
		)
	</insert>
</mapper>