<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="invt.dao.local.InvtRepayTransferHistoryDao">
  <resultMap id="BaseResultMap" type="invt.model.po.InvtRepayTransferHistory">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="proof_id" jdbcType="VARCHAR" property="proofId" />
    <result column="va_id" jdbcType="BIGINT" property="vaId" />
    <result column="price_pincipal" jdbcType="DECIMAL" property="pricePincipal" />
    <result column="price_interest" jdbcType="DECIMAL" property="priceInterest" />
    <result column="price_punish" jdbcType="DECIMAL" property="pricePunish" />
    <result column="from_account" jdbcType="INTEGER" javaType="invt.biz.enums.AccountType" property="fromAccount" />
    <result column="target_account" jdbcType="INTEGER" javaType="invt.biz.enums.AccountType" property="targetAccount" />
    <result column="transfer_amount" jdbcType="DECIMAL" property="transferAmount" />
    <result column="repay_transfer_type" jdbcType="INTEGER" javaType="invt.biz.enums.RepayTransferType" property="repayTransferType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, version, create_time, update_time, proof_id, va_id, price_pincipal, price_interest, 
    price_punish, from_account, target_account, transfer_amount, repay_transfer_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invt_repay_transfer_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from invt_repay_transfer_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="invt.model.po.InvtRepayTransferHistory">
    insert into invt_repay_transfer_history (id, version, create_time, 
      update_time, proof_id, va_id, 
      price_pincipal, price_interest, price_punish, 
      from_account, target_account, transfer_amount, 
      repay_transfer_type)
    values (#{id,jdbcType=BIGINT}, #{version,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{proofId,jdbcType=VARCHAR}, #{vaId,jdbcType=BIGINT}, 
      #{pricePincipal,jdbcType=DECIMAL}, #{priceInterest,jdbcType=DECIMAL}, #{pricePunish,jdbcType=DECIMAL}, 
      #{fromAccount,jdbcType=INTEGER}, #{targetAccount,jdbcType=INTEGER}, #{transferAmount,jdbcType=DECIMAL}, 
      #{repayTransferType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="invt.model.po.InvtRepayTransferHistory">
    insert into invt_repay_transfer_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="proofId != null">
        proof_id,
      </if>
      <if test="vaId != null">
        va_id,
      </if>
      <if test="pricePincipal != null">
        price_pincipal,
      </if>
      <if test="priceInterest != null">
        price_interest,
      </if>
      <if test="pricePunish != null">
        price_punish,
      </if>
      <if test="fromAccount != null">
        from_account,
      </if>
      <if test="targetAccount != null">
        target_account,
      </if>
      <if test="transferAmount != null">
        transfer_amount,
      </if>
      <if test="repayTransferType != null">
        repay_transfer_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="proofId != null">
        #{proofId,jdbcType=VARCHAR},
      </if>
      <if test="vaId != null">
        #{vaId,jdbcType=BIGINT},
      </if>
      <if test="pricePincipal != null">
        #{pricePincipal,jdbcType=DECIMAL},
      </if>
      <if test="priceInterest != null">
        #{priceInterest,jdbcType=DECIMAL},
      </if>
      <if test="pricePunish != null">
        #{pricePunish,jdbcType=DECIMAL},
      </if>
      <if test="fromAccount != null">
        #{fromAccount,jdbcType=INTEGER},
      </if>
      <if test="targetAccount != null">
        #{targetAccount,jdbcType=INTEGER},
      </if>
      <if test="transferAmount != null">
        #{transferAmount,jdbcType=DECIMAL},
      </if>
      <if test="repayTransferType != null">
        #{repayTransferType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="invt.model.po.InvtRepayTransferHistory">
    update invt_repay_transfer_history
    <set>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="proofId != null">
        proof_id = #{proofId,jdbcType=VARCHAR},
      </if>
      <if test="vaId != null">
        va_id = #{vaId,jdbcType=BIGINT},
      </if>
      <if test="pricePincipal != null">
        price_pincipal = #{pricePincipal,jdbcType=DECIMAL},
      </if>
      <if test="priceInterest != null">
        price_interest = #{priceInterest,jdbcType=DECIMAL},
      </if>
      <if test="pricePunish != null">
        price_punish = #{pricePunish,jdbcType=DECIMAL},
      </if>
      <if test="fromAccount != null">
        from_account = #{fromAccount,jdbcType=INTEGER},
      </if>
      <if test="targetAccount != null">
        target_account = #{targetAccount,jdbcType=INTEGER},
      </if>
      <if test="transferAmount != null">
        transfer_amount = #{transferAmount,jdbcType=DECIMAL},
      </if>
      <if test="repayTransferType != null">
        repay_transfer_type = #{repayTransferType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="invt.model.po.InvtRepayTransferHistory">
    update invt_repay_transfer_history
    set version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      proof_id = #{proofId,jdbcType=VARCHAR},
      va_id = #{vaId,jdbcType=BIGINT},
      price_pincipal = #{pricePincipal,jdbcType=DECIMAL},
      price_interest = #{priceInterest,jdbcType=DECIMAL},
      price_punish = #{pricePunish,jdbcType=DECIMAL},
      from_account = #{fromAccount,jdbcType=INTEGER},
      target_account = #{targetAccount,jdbcType=INTEGER},
      transfer_amount = #{transferAmount,jdbcType=DECIMAL},
      repay_transfer_type = #{repayTransferType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into invt_repay_transfer_history
    (id,
    proof_id,
    va_id,
    price_pincipal,
    price_interest,
    price_punish,
    from_account,
    target_account,
    transfer_amount,
    repay_transfer_type)
    values
    <foreach close=")" collection="list" index="index" item="record" open="(" separator=",">
      #{record.id,jdbcType=BIGINT},
      #{record.proofId,jdbcType=VARCHAR},
      #{record.vaId,jdbcType=BIGINT},
      #{record.pricePincipal,jdbcType=DECIMAL},
      #{record.priceInterest,jdbcType=DECIMAL},
      #{record.pricePunish,jdbcType=DECIMAL},
      #{record.fromAccount,javaType=invt.biz.enums.AccountType,jdbcType=BIGINT},
      #{record.targetAccount,javaType=invt.biz.enums.AccountType,jdbcType=BIGINT},
      #{record.transferAmount,jdbcType=DECIMAL},
      #{record.repayTransferType,javaType=invt.biz.enums.RepayTransferType,jdbcType=INTEGER}
    </foreach>
  </insert>

  <select id="countByProofId" parameterType="java.lang.String" resultType="java.lang.Long">
    select count(1)
    from invt_repay_transfer_history
    where proof_id = #{proofId,jdbcType=VARCHAR}
  </select>
</mapper>